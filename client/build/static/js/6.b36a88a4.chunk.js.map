{"version":3,"sources":["components/stripe-button/stripe-button.component.jsx","components/checkout-item/checkout-item.styles.jsx","components/checkout-item/checkout-item.component.jsx","pages/checkout/checkout.styles.jsx","pages/checkout/checkout.component.jsx"],"names":["StripeCheckoutButton","_ref","price","priceForStripe","react_default","a","createElement","main_default","label","name","billingAddress","shippingAddress","image","description","concat","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","stripeKey","CheckoutItemContainer","styled","div","_templateObject","ImageContainer","_templateObject2","TextContainer","span","_templateObject3","QuantityContainer","_templateObject4","displayName","RemoveButtonContainer","_templateObject5","connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","imageUrl","quantity","src","alt","onClick","CheckoutPageContainer","checkout_styles_templateObject","CheckoutHeaderContainer","checkout_styles_templateObject2","HeaderBlockContainer","checkout_styles_templateObject3","TotalContainer","checkout_styles_templateObject4","WarningContainer","checkout_styles_templateObject5","__webpack_require__","d","__webpack_exports__","checkout_component_CheckoutPage","CheckoutPage","cartItems","total","map","checkout_item_component","key","id","stripe_button_component","mapStateToProps","createStructuredSelector","selectCartItems","selectCartTotal"],"mappings":"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","file":"static/js/6.b36a88a4.chunk.js","sourcesContent":["import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axios from 'axios';\r\n\r\nconst StripeCheckoutButton = ({ price }) => {\r\n  const priceForStripe = price * 100;\r\n  const publishableKey = 'pk_test_b7a3hFL5nC3qlBCZ6bQACpez00gyMMP52H';\r\n\r\n  const onToken = token => {\r\n    axios({\r\n      url: 'payment',\r\n      method: 'post',\r\n      data: {\r\n        amount: priceForStripe,\r\n        token: token\r\n      }\r\n    })\r\n      .then(response => {\r\n        alert('succesful payment');\r\n      })\r\n      .catch(error => {\r\n        console.log('Payment Error: ', error);\r\n        alert(\r\n          'There was an issue with your payment! Please make sure you use the provided credit card.'\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <StripeCheckout\r\n      label='Pay Now'\r\n      name='CRWN Clothing Ltd.'\r\n      billingAddress\r\n      shippingAddress\r\n      image='https://svgshare.com/i/CUz.svg'\r\n      description={`Your total is $${price}`}\r\n      amount={priceForStripe}\r\n      panelLabel='Pay Now'\r\n      token={onToken}\r\n      stripeKey={publishableKey}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StripeCheckoutButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const CheckoutItemContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  min-height: 100px;\r\n  border-bottom: 1px solid darkgrey;\r\n  padding: 15px 0;\r\n  font-size: 20px;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  width: 23%;\r\n  padding-right: 15px;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const TextContainer = styled.span`\r\n  width: 23%;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 22%;\r\n  }\r\n`;\r\n\r\nexport const QuantityContainer = styled(TextContainer)`\r\n  display: flex;\r\n\r\n  span {\r\n    margin: 0 10px;\r\n  }\r\n\r\n  div {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nQuantityContainer.displayName = 'QuantityContainer';\r\n\r\nexport const RemoveButtonContainer = styled.div`\r\n  padding-left: 12px;\r\n  cursor: pointer;\r\n`;\r\n\r\nRemoveButtonContainer.displayName = 'RemoveButtonContainer';\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  clearItemFromCart,\r\n  addItem,\r\n  removeItem\r\n} from '../../redux/cart/cart.actions';\r\n\r\nimport {\r\n  CheckoutItemContainer,\r\n  ImageContainer,\r\n  TextContainer,\r\n  QuantityContainer,\r\n  RemoveButtonContainer\r\n} from './checkout-item.styles';\r\n\r\nexport const CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\r\n  const { name, imageUrl, price, quantity } = cartItem;\r\n  return (\r\n    <CheckoutItemContainer>\r\n      <ImageContainer>\r\n        <img src={imageUrl} alt='item' />\r\n      </ImageContainer>\r\n      <TextContainer>{name}</TextContainer>\r\n      <QuantityContainer>\r\n        <div onClick={() => removeItem(cartItem)}>&#10094;</div>\r\n        <span>{quantity}</span>\r\n        <div onClick={() => addItem(cartItem)}>&#10095;</div>\r\n      </QuantityContainer>\r\n      <TextContainer>{price}</TextContainer>\r\n      <RemoveButtonContainer onClick={() => clearItem(cartItem)}>\r\n        &#10005;\r\n      </RemoveButtonContainer>\r\n    </CheckoutItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  clearItem: item => dispatch(clearItemFromCart(item)),\r\n  addItem: item => dispatch(addItem(item)),\r\n  removeItem: item => dispatch(removeItem(item))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CheckoutItem);\r\n","import styled from 'styled-components';\r\n\r\nexport const CheckoutPageContainer = styled.div`\r\n  width: 55%;\r\n  min-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 50px auto 0;\r\n\r\n  button {\r\n    margin-left: auto;\r\n    margin-top: 50px;\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const CheckoutHeaderContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid darkgrey;\r\n`;\r\n\r\nexport const HeaderBlockContainer = styled.div`\r\n  text-transform: capitalize;\r\n  width: 23%;\r\n\r\n  &:last-child {\r\n    width: 8%;\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 22%\r\n\r\n    &:last-child {\r\n      width: 12%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TotalContainer = styled.div`\r\n  margin-top: 30px;\r\n  margin-left: auto;\r\n  font-size: 36px;\r\n`;\r\n\r\nexport const WarningContainer = styled.div`\r\n  text-align: center;\r\n  margin-top: 40px;\r\n  font-size: 24px;\r\n  color: red;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component';\r\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\r\n\r\nimport {\r\n  selectCartItems,\r\n  selectCartTotal\r\n} from '../../redux/cart/cart.selectors';\r\n\r\nimport {\r\n  CheckoutPageContainer,\r\n  CheckoutHeaderContainer,\r\n  HeaderBlockContainer,\r\n  TotalContainer,\r\n  WarningContainer\r\n} from './checkout.styles';\r\n\r\nexport const CheckoutPage = ({ cartItems, total }) => (\r\n  <CheckoutPageContainer>\r\n    <CheckoutHeaderContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Product</span>\r\n      </HeaderBlockContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Description</span>\r\n      </HeaderBlockContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Quantity</span>\r\n      </HeaderBlockContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Price</span>\r\n      </HeaderBlockContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Remove</span>\r\n      </HeaderBlockContainer>\r\n    </CheckoutHeaderContainer>\r\n    {cartItems.map(cartItem => (\r\n      <CheckoutItem key={cartItem.id} cartItem={cartItem} />\r\n    ))}\r\n    <TotalContainer>TOTAL: ${total}</TotalContainer>\r\n    <WarningContainer>\r\n      *Please use the following test credit card for payments*\r\n      <br />\r\n      4242 4242 4242 4242 - Exp: 01/20 - CVV: 123\r\n    </WarningContainer>\r\n    <StripeCheckoutButton price={total} />\r\n  </CheckoutPageContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n  total: selectCartTotal\r\n});\r\n\r\nexport default connect(mapStateToProps)(CheckoutPage);\r\n"],"sourceRoot":""}